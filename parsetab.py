
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startARRAY AS ASS_ADD ASS_DIV ASS_MOD ASS_MUL ASS_SUB BOOL_LITERAL BREAK CLOSETAG CONTINUE DNUM_LITERAL DOUBLE_STRING ECHO ELSE ELSEIF FOREACH GLOBAL IDENTIFIER IF KEYWORDS LNUM_LITERAL NEW OPENTAG OP_DEC OP_EQ OP_GE OP_IDENTICAL OP_INC OP_LAND OP_LE OP_LOR OP_NE OP_NOTIDENTICAL OP_XOR PRINT REQUIRE RETURN SINGLE_STRING STATIC WHILEargs : IDENTIFIER\n\t\t\t| LNUM_LITERAL\n\t\t\t| DNUM_LITERAL\n\t\t\t| SINGLE_STRING\n\t\t\t| DOUBLE_STRING\n\t\t\t| BOOL_LITERAL\n\t\t\t| postfixExpr\n\t\t\t| prefixExpr\n\tMultiplicativeExpression : args\n    | MultiplicativeExpression \'*\' args\n\t| MultiplicativeExpression \'/\' args\n\t| MultiplicativeExpression \'%\' args\n    AdditiveExpression : MultiplicativeExpression\n        | AdditiveExpression \'+\' MultiplicativeExpression\n        | AdditiveExpression \'-\' MultiplicativeExpression\n     arithmeticExp : AdditiveExpression\n\t\t\t\t\t\t| MultiplicativeExpression\n\t\t\t\t\t\t\n\tstart : OPENTAG statementstates : assignment\n\t\t\t  | postfixExpr ";"\n\t\t\t  | prefixExpr ";"\n\t\t\t  | whileLoop\n\t\t\t  | forEach\n\t\t\t  | return\n\t\t\t  | break\n\t\t\t  | continue\n\t\t\t  | echo \n\t\t\t  | print\n\n\tstatement : states statement\n\t\t\t\t   | end\n\tassignmentOperator : \'=\'\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    params : args\n\t\t\t  | args \',\' params\n\tassignment : IDENTIFIER assignmentOperator arithmeticExp ";"\n\t\t\t\t\t| IDENTIFIER \'=\' \'[\' params \']\' \';\'\n\t\t\t\t  \n\tpostfixExpr : IDENTIFIER OP_INC\n\tpostfixExpr : IDENTIFIER OP_DEC \n\tprefixExpr : OP_INC IDENTIFIER\n\tprefixExpr : OP_DEC IDENTIFIER \n\twhileLoop : WHILE \'(\' conditionalExp \')\' \'{\' block \'}\'\n\tforEach : FOREACH \'(\' IDENTIFIER AS IDENTIFIER \')\' \'{\' block \'}\'\n\tconditionalOp : OP_GE\n\t\t\t\t\t | OP_LE\n\t\t\t\t\t | OP_IDENTICAL\n\t\t\t\t\t | OP_NOTIDENTICAL\n\t\t\t\t\t | OP_EQ\n\t\t\t\t\t | OP_NE\n\t\t\t\t\t | \'<\'\n\t\t\t\t\t | \'>\'\n\tconditionalExp : condArgs conditionalOp condArgs\n\t\t\t\t\t  | condArgs\n\t\t\t\t\t  | conditionalExp logicalOp conditionalExp\n\t\t\t\t\t  | \'(\' conditionalExp \')\' logicalOp \'(\' conditionalExp \')\'\n\t\t\t\t\t  | \'(\' conditionalExp \')\' logicalOp conditionalExp\n\t\t\t\t\t  | conditionalExp logicalOp \'(\' conditionalExp \')\'\n\tlogicalOp : OP_LAND\n\t\t\t\t | OP_LOR\n\t\t\t\t | OP_XOR\n\t condArgs : arithmeticExp\n\t\t\t\t | IDENTIFIER\n\t\t\t\t | LNUM_LITERAL\n\t\t\t\t | DNUM_LITERAL\n\tblock : states block\n\t\t\t |\n\treturn : RETURN ";"\n\t\t\t  | RETURN arithmeticExp ";"\n\tbreak : BREAK ";"\n\tcontinue : CONTINUE ";"\n\techo : ECHO ";"\n\t\t\t| ECHO arithmeticExp ";"\n\tprint : PRINT arithmeticExp ";"\n\t\t\t | PRINT \'(\' arithmeticExp \')\' \';\'\n\tend : CLOSETAG'
    
_lr_action_items = {'OPENTAG':([0,],[2,]),'$end':([1,3,5,16,27,],[0,-18,-30,-78,-29,]),'CLOSETAG':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,114,115,124,131,],[16,16,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,-77,-40,-45,-46,]),'IDENTIFIER':([2,4,6,9,10,11,12,13,14,15,18,19,22,25,26,28,29,30,31,34,35,36,37,38,41,42,43,56,57,58,61,63,64,72,73,74,75,76,77,78,79,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,107,109,111,114,115,117,119,122,124,127,131,],[17,17,-19,-22,-23,-24,-25,-26,-27,-28,39,40,48,48,48,-20,-21,48,-31,-32,-33,-34,-35,-36,68,71,-70,-72,-73,-74,48,48,68,-71,48,48,48,48,48,-75,-76,-39,68,-61,-62,-63,68,-47,-48,-49,-50,-51,-52,-53,-54,113,48,17,68,-77,-40,68,17,68,-45,17,-46,]),'OP_INC':([2,4,6,9,10,11,12,13,14,15,17,22,25,26,28,29,30,31,34,35,36,37,38,41,43,48,56,57,58,61,63,64,68,72,73,74,75,76,77,78,79,81,86,87,88,89,90,91,92,93,94,95,96,97,98,107,109,111,114,115,117,119,122,124,127,131,],[18,18,-19,-22,-23,-24,-25,-26,-27,-28,32,18,18,18,-20,-21,18,-31,-32,-33,-34,-35,-36,18,-70,32,-72,-73,-74,18,18,18,32,-71,18,18,18,18,18,-75,-76,-39,18,-61,-62,-63,18,-47,-48,-49,-50,-51,-52,-53,-54,18,18,18,-77,-40,18,18,18,-45,18,-46,]),'OP_DEC':([2,4,6,9,10,11,12,13,14,15,17,22,25,26,28,29,30,31,34,35,36,37,38,41,43,48,56,57,58,61,63,64,68,72,73,74,75,76,77,78,79,81,86,87,88,89,90,91,92,93,94,95,96,97,98,107,109,111,114,115,117,119,122,124,127,131,],[19,19,-19,-22,-23,-24,-25,-26,-27,-28,33,19,19,19,-20,-21,19,-31,-32,-33,-34,-35,-36,19,-70,33,-72,-73,-74,19,19,19,33,-71,19,19,19,19,19,-75,-76,-39,19,-61,-62,-63,19,-47,-48,-49,-50,-51,-52,-53,-54,19,19,19,-77,-40,19,19,19,-45,19,-46,]),'WHILE':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[20,20,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,20,-77,-40,20,-45,20,-46,]),'FOREACH':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[21,21,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,21,-77,-40,21,-45,21,-46,]),'RETURN':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[22,22,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,22,-77,-40,22,-45,22,-46,]),'BREAK':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[23,23,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,23,-77,-40,23,-45,23,-46,]),'CONTINUE':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[24,24,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,24,-77,-40,24,-45,24,-46,]),'ECHO':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[25,25,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,25,-77,-40,25,-45,25,-46,]),'PRINT':([2,4,6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,119,124,127,131,],[26,26,-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,26,-77,-40,26,-45,26,-46,]),'}':([6,9,10,11,12,13,14,15,28,29,43,56,57,58,72,78,79,81,109,114,115,118,119,124,125,127,129,131,],[-19,-22,-23,-24,-25,-26,-27,-28,-20,-21,-70,-72,-73,-74,-71,-75,-76,-39,-69,-77,-40,124,-69,-45,-68,-69,131,-46,]),';':([7,8,22,23,24,25,32,33,39,40,44,45,46,47,48,49,50,51,52,53,54,55,59,60,62,100,101,102,103,104,105,106,],[28,29,43,56,57,58,-41,-42,-43,-44,72,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,78,79,81,-14,-15,-10,-11,-12,114,115,]),'=':([17,],[31,]),'ASS_MUL':([17,],[34,]),'ASS_DIV':([17,],[35,]),'ASS_MOD':([17,],[36,]),'ASS_ADD':([17,],[37,]),'ASS_SUB':([17,],[38,]),'(':([20,21,26,41,64,86,87,88,89,111,117,122,],[41,42,61,64,64,111,-61,-62,-63,64,122,64,]),'LNUM_LITERAL':([22,25,26,30,31,34,35,36,37,38,41,61,63,64,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,107,111,117,122,],[49,49,49,49,-31,-32,-33,-34,-35,-36,69,49,49,69,49,49,49,49,49,69,-61,-62,-63,69,-47,-48,-49,-50,-51,-52,-53,-54,49,69,69,69,]),'DNUM_LITERAL':([22,25,26,30,31,34,35,36,37,38,41,61,63,64,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,107,111,117,122,],[50,50,50,50,-31,-32,-33,-34,-35,-36,70,50,50,70,50,50,50,50,50,70,-61,-62,-63,70,-47,-48,-49,-50,-51,-52,-53,-54,50,70,70,70,]),'SINGLE_STRING':([22,25,26,30,31,34,35,36,37,38,41,61,63,64,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,107,111,117,122,],[51,51,51,51,-31,-32,-33,-34,-35,-36,51,51,51,51,51,51,51,51,51,51,-61,-62,-63,51,-47,-48,-49,-50,-51,-52,-53,-54,51,51,51,51,]),'DOUBLE_STRING':([22,25,26,30,31,34,35,36,37,38,41,61,63,64,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,107,111,117,122,],[52,52,52,52,-31,-32,-33,-34,-35,-36,52,52,52,52,52,52,52,52,52,52,-61,-62,-63,52,-47,-48,-49,-50,-51,-52,-53,-54,52,52,52,52,]),'BOOL_LITERAL':([22,25,26,30,31,34,35,36,37,38,41,61,63,64,73,74,75,76,77,86,87,88,89,90,91,92,93,94,95,96,97,98,107,111,117,122,],[53,53,53,53,-31,-32,-33,-34,-35,-36,53,53,53,53,53,53,53,53,53,53,-61,-62,-63,53,-47,-48,-49,-50,-51,-52,-53,-54,53,53,53,53,]),'[':([31,],[63,]),'*':([32,33,39,40,46,47,48,49,50,51,52,53,54,55,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,75,-9,-1,-2,-3,-4,-5,-6,-7,-8,-1,-2,-3,75,75,-10,-11,-12,]),'/':([32,33,39,40,46,47,48,49,50,51,52,53,54,55,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,76,-9,-1,-2,-3,-4,-5,-6,-7,-8,-1,-2,-3,76,76,-10,-11,-12,]),'%':([32,33,39,40,46,47,48,49,50,51,52,53,54,55,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,77,-9,-1,-2,-3,-4,-5,-6,-7,-8,-1,-2,-3,77,77,-10,-11,-12,]),'+':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,73,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,-1,-2,-3,-14,-15,-10,-11,-12,]),'-':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,74,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,-1,-2,-3,-14,-15,-10,-11,-12,]),'OP_GE':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,91,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'OP_LE':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,92,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'OP_IDENTICAL':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,93,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'OP_NOTIDENTICAL':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,94,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'OP_EQ':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,95,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'OP_NE':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,96,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'<':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,97,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),'>':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,66,67,68,69,70,100,101,102,103,104,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,98,-64,-1,-2,-3,-14,-15,-10,-11,-12,]),')':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,65,66,67,68,69,70,80,84,100,101,102,103,104,110,112,113,120,123,126,128,130,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,85,-56,-64,-1,-2,-3,105,108,-14,-15,-10,-11,-12,-57,-55,121,126,-59,-60,130,-58,]),'OP_LAND':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,65,66,67,68,69,70,84,100,101,102,103,104,108,110,112,120,123,126,128,130,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,87,-56,-64,-1,-2,-3,87,-14,-15,-10,-11,-12,87,87,-55,87,87,87,87,87,]),'OP_LOR':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,65,66,67,68,69,70,84,100,101,102,103,104,108,110,112,120,123,126,128,130,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,88,-56,-64,-1,-2,-3,88,-14,-15,-10,-11,-12,88,88,-55,88,88,88,88,88,]),'OP_XOR':([32,33,39,40,45,46,47,48,49,50,51,52,53,54,55,65,66,67,68,69,70,84,100,101,102,103,104,108,110,112,120,123,126,128,130,],[-41,-42,-43,-44,-16,-13,-9,-1,-2,-3,-4,-5,-6,-7,-8,89,-56,-64,-1,-2,-3,89,-14,-15,-10,-11,-12,89,89,-55,89,89,89,89,89,]),',':([32,33,39,40,48,49,50,51,52,53,54,55,83,],[-41,-42,-43,-44,-1,-2,-3,-4,-5,-6,-7,-8,107,]),']':([32,33,39,40,48,49,50,51,52,53,54,55,82,83,116,],[-41,-42,-43,-44,-1,-2,-3,-4,-5,-6,-7,-8,106,-37,-38,]),'AS':([71,],[99,]),'{':([85,121,],[109,127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statement':([2,4,],[3,27,]),'states':([2,4,109,119,127,],[4,4,119,119,119,]),'end':([2,4,],[5,5,]),'assignment':([2,4,109,119,127,],[6,6,6,6,6,]),'postfixExpr':([2,4,22,25,26,30,41,61,63,64,73,74,75,76,77,86,90,107,109,111,117,119,122,127,],[7,7,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,7,54,54,7,54,7,]),'prefixExpr':([2,4,22,25,26,30,41,61,63,64,73,74,75,76,77,86,90,107,109,111,117,119,122,127,],[8,8,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,8,55,55,8,55,8,]),'whileLoop':([2,4,109,119,127,],[9,9,9,9,9,]),'forEach':([2,4,109,119,127,],[10,10,10,10,10,]),'return':([2,4,109,119,127,],[11,11,11,11,11,]),'break':([2,4,109,119,127,],[12,12,12,12,12,]),'continue':([2,4,109,119,127,],[13,13,13,13,13,]),'echo':([2,4,109,119,127,],[14,14,14,14,14,]),'print':([2,4,109,119,127,],[15,15,15,15,15,]),'assignmentOperator':([17,],[30,]),'arithmeticExp':([22,25,26,30,41,61,64,86,90,111,117,122,],[44,59,60,62,67,80,67,67,67,67,67,67,]),'AdditiveExpression':([22,25,26,30,41,61,64,86,90,111,117,122,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'MultiplicativeExpression':([22,25,26,30,41,61,64,73,74,86,90,111,117,122,],[46,46,46,46,46,46,46,100,101,46,46,46,46,46,]),'args':([22,25,26,30,41,61,63,64,73,74,75,76,77,86,90,107,111,117,122,],[47,47,47,47,47,47,83,47,47,47,102,103,104,47,47,83,47,47,47,]),'conditionalExp':([41,64,86,111,117,122,],[65,84,110,120,123,128,]),'condArgs':([41,64,86,90,111,117,122,],[66,66,66,112,66,66,66,]),'params':([63,107,],[82,116,]),'logicalOp':([65,84,108,110,120,123,126,128,130,],[86,86,117,86,86,86,117,86,117,]),'conditionalOp':([66,],[90,]),'block':([109,119,127,],[118,125,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('args -> IDENTIFIER','args',1,'p_args','php_yacc.py',45),
  ('args -> LNUM_LITERAL','args',1,'p_args','php_yacc.py',46),
  ('args -> DNUM_LITERAL','args',1,'p_args','php_yacc.py',47),
  ('args -> SINGLE_STRING','args',1,'p_args','php_yacc.py',48),
  ('args -> DOUBLE_STRING','args',1,'p_args','php_yacc.py',49),
  ('args -> BOOL_LITERAL','args',1,'p_args','php_yacc.py',50),
  ('args -> postfixExpr','args',1,'p_args','php_yacc.py',51),
  ('args -> prefixExpr','args',1,'p_args','php_yacc.py',52),
  ('MultiplicativeExpression -> args','MultiplicativeExpression',1,'p_MultiplicativeExpression','php_yacc.py',57),
  ('MultiplicativeExpression -> MultiplicativeExpression * args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',58),
  ('MultiplicativeExpression -> MultiplicativeExpression / args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',59),
  ('MultiplicativeExpression -> MultiplicativeExpression % args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',60),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','php_yacc.py',88),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','php_yacc.py',89),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','php_yacc.py',90),
  ('arithmeticExp -> AdditiveExpression','arithmeticExp',1,'p_arithmeticExp','php_yacc.py',116),
  ('arithmeticExp -> MultiplicativeExpression','arithmeticExp',1,'p_arithmeticExp','php_yacc.py',117),
  ('start -> OPENTAG statement','start',2,'p_start','php_yacc.py',124),
  ('states -> assignment','states',1,'p_states','php_yacc.py',127),
  ('states -> postfixExpr ;','states',2,'p_states','php_yacc.py',128),
  ('states -> prefixExpr ;','states',2,'p_states','php_yacc.py',129),
  ('states -> whileLoop','states',1,'p_states','php_yacc.py',130),
  ('states -> forEach','states',1,'p_states','php_yacc.py',131),
  ('states -> return','states',1,'p_states','php_yacc.py',132),
  ('states -> break','states',1,'p_states','php_yacc.py',133),
  ('states -> continue','states',1,'p_states','php_yacc.py',134),
  ('states -> echo','states',1,'p_states','php_yacc.py',135),
  ('states -> print','states',1,'p_states','php_yacc.py',136),
  ('statement -> states statement','statement',2,'p_statement','php_yacc.py',141),
  ('statement -> end','statement',1,'p_statement','php_yacc.py',142),
  ('assignmentOperator -> =','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',147),
  ('assignmentOperator -> ASS_MUL','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',148),
  ('assignmentOperator -> ASS_DIV','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',149),
  ('assignmentOperator -> ASS_MOD','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',150),
  ('assignmentOperator -> ASS_ADD','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',151),
  ('assignmentOperator -> ASS_SUB','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',152),
  ('params -> args','params',1,'p_params','php_yacc.py',157),
  ('params -> args , params','params',3,'p_params','php_yacc.py',158),
  ('assignment -> IDENTIFIER assignmentOperator arithmeticExp ;','assignment',4,'p_assignment','php_yacc.py',170),
  ('assignment -> IDENTIFIER = [ params ] ;','assignment',6,'p_assignment','php_yacc.py',171),
  ('postfixExpr -> IDENTIFIER OP_INC','postfixExpr',2,'p_postfixExprInc','php_yacc.py',217),
  ('postfixExpr -> IDENTIFIER OP_DEC','postfixExpr',2,'p_postfixExprDec','php_yacc.py',229),
  ('prefixExpr -> OP_INC IDENTIFIER','prefixExpr',2,'p_prefixExprInc','php_yacc.py',241),
  ('prefixExpr -> OP_DEC IDENTIFIER','prefixExpr',2,'p_prefixExprDec','php_yacc.py',253),
  ('whileLoop -> WHILE ( conditionalExp ) { block }','whileLoop',7,'p_whileLoop','php_yacc.py',265),
  ('forEach -> FOREACH ( IDENTIFIER AS IDENTIFIER ) { block }','forEach',9,'p_forEach','php_yacc.py',269),
  ('conditionalOp -> OP_GE','conditionalOp',1,'p_conditionalOp','php_yacc.py',273),
  ('conditionalOp -> OP_LE','conditionalOp',1,'p_conditionalOp','php_yacc.py',274),
  ('conditionalOp -> OP_IDENTICAL','conditionalOp',1,'p_conditionalOp','php_yacc.py',275),
  ('conditionalOp -> OP_NOTIDENTICAL','conditionalOp',1,'p_conditionalOp','php_yacc.py',276),
  ('conditionalOp -> OP_EQ','conditionalOp',1,'p_conditionalOp','php_yacc.py',277),
  ('conditionalOp -> OP_NE','conditionalOp',1,'p_conditionalOp','php_yacc.py',278),
  ('conditionalOp -> <','conditionalOp',1,'p_conditionalOp','php_yacc.py',279),
  ('conditionalOp -> >','conditionalOp',1,'p_conditionalOp','php_yacc.py',280),
  ('conditionalExp -> condArgs conditionalOp condArgs','conditionalExp',3,'p_conditionalExp','php_yacc.py',284),
  ('conditionalExp -> condArgs','conditionalExp',1,'p_conditionalExp','php_yacc.py',285),
  ('conditionalExp -> conditionalExp logicalOp conditionalExp','conditionalExp',3,'p_conditionalExp','php_yacc.py',286),
  ('conditionalExp -> ( conditionalExp ) logicalOp ( conditionalExp )','conditionalExp',7,'p_conditionalExp','php_yacc.py',287),
  ('conditionalExp -> ( conditionalExp ) logicalOp conditionalExp','conditionalExp',5,'p_conditionalExp','php_yacc.py',288),
  ('conditionalExp -> conditionalExp logicalOp ( conditionalExp )','conditionalExp',5,'p_conditionalExp','php_yacc.py',289),
  ('logicalOp -> OP_LAND','logicalOp',1,'p_logicalOp','php_yacc.py',293),
  ('logicalOp -> OP_LOR','logicalOp',1,'p_logicalOp','php_yacc.py',294),
  ('logicalOp -> OP_XOR','logicalOp',1,'p_logicalOp','php_yacc.py',295),
  ('condArgs -> arithmeticExp','condArgs',1,'p_condArgs','php_yacc.py',299),
  ('condArgs -> IDENTIFIER','condArgs',1,'p_condArgs','php_yacc.py',300),
  ('condArgs -> LNUM_LITERAL','condArgs',1,'p_condArgs','php_yacc.py',301),
  ('condArgs -> DNUM_LITERAL','condArgs',1,'p_condArgs','php_yacc.py',302),
  ('block -> states block','block',2,'p_block','php_yacc.py',306),
  ('block -> <empty>','block',0,'p_block','php_yacc.py',307),
  ('return -> RETURN ;','return',2,'p_return','php_yacc.py',311),
  ('return -> RETURN arithmeticExp ;','return',3,'p_return','php_yacc.py',312),
  ('break -> BREAK ;','break',2,'p_break','php_yacc.py',317),
  ('continue -> CONTINUE ;','continue',2,'p_continue','php_yacc.py',321),
  ('echo -> ECHO ;','echo',2,'p_echo','php_yacc.py',325),
  ('echo -> ECHO arithmeticExp ;','echo',3,'p_echo','php_yacc.py',326),
  ('print -> PRINT arithmeticExp ;','print',3,'p_print','php_yacc.py',330),
  ('print -> PRINT ( arithmeticExp ) ;','print',5,'p_print','php_yacc.py',331),
  ('end -> CLOSETAG','end',1,'p_end','php_yacc.py',335),
]
