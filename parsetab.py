
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startARRAY AS ASS_ADD ASS_DIV ASS_MOD ASS_MUL ASS_SUB BOOL_LITERAL BREAK CLOSETAG CONTINUE DNUM_LITERAL DOUBLE_STRING ECHO ELSE ELSEIF FOREACH GLOBAL IDENTIFIER IF KEYWORDS LNUM_LITERAL NEW OPENTAG OP_DEC OP_EQ OP_GE OP_IDENTICAL OP_INC OP_LAND OP_LE OP_LOR OP_NE OP_NOTIDENTICAL OP_XOR PRINT REQUIRE RETURN SINGLE_STRING STATIC WHILEargs : IDENTIFIER\n\t\t\t| LNUM_LITERAL\n\t\t\t| DNUM_LITERAL\n\t\t\t| SINGLE_STRING\n\t\t\t| DOUBLE_STRING\n\t\t\t| BOOL_LITERAL\n\t\t\t| postfixExpr\n\t\t\t| prefixExpr\n\tMultiplicativeExpression : args\n    | MultiplicativeExpression \'*\' args\n\t| MultiplicativeExpression \'/\' args\n\t| MultiplicativeExpression \'%\' args\n    AdditiveExpression : MultiplicativeExpression\n        | AdditiveExpression \'+\' MultiplicativeExpression\n        | AdditiveExpression \'-\' MultiplicativeExpression\n     arithmeticExp : AdditiveExpression\n\t\t\t\t\t\t| MultiplicativeExpression\n\t\t\t\t\t\t\n\tstart : OPENTAG statementstates : assignment\n\t\t\t  | postfixExpr ";"\n\t\t\t  | prefixExpr ";"\n\t\t\t  | whileLoop\n\t\t\t  | forEach\n\t\t\t  | return\n\t\t\t  | break\n\t\t\t  | continue\n\t\t\t  | echo \n\t\t\t  | print\n\n\tstatement : states statement\n\t\t\t\t   | end\n\tassignmentOperator : \'=\'\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    params : args\n\t\t\t  | args \',\' params\n\tassignment : IDENTIFIER assignmentOperator arithmeticExp ";"\n\t\t\t\t\t| IDENTIFIER \'=\' \'[\' params \']\' \';\'\n\t\t\t\t  \n\tpostfixExpr : IDENTIFIER OP_INC\n\tpostfixExpr : IDENTIFIER OP_DEC \n\tprefixExpr : OP_INC IDENTIFIER\n\tprefixExpr : OP_DEC IDENTIFIER \n\twhileLoop : WHILE \'(\' conditionalExp \')\' \'{\' block \'}\'\n\tforEach : FOREACH \'(\' IDENTIFIER AS IDENTIFIER \')\' \'{\' block \'}\'\n\tconditionalOp : OP_GE\n\t\t\t\t\t | OP_LE\n\t\t\t\t\t | OP_IDENTICAL\n\t\t\t\t\t | OP_NOTIDENTICAL\n\t\t\t\t\t | OP_EQ\n\t\t\t\t\t | OP_NE\n\t\t\t\t\t | \'<\'\n\t\t\t\t\t | \'>\'\n\tconditionalExp : condArgs conditionalOp condArgs\n\t\t\t\t\t  | condArgs\n\t\t\t\t\t  | conditionalExp logicalOp conditionalExp\n\t\t\t\t\t  | \'(\' conditionalExp \')\' logicalOp \'(\' conditionalExp \')\'\n\t\t\t\t\t  | \'(\' conditionalExp \')\' logicalOp conditionalExp\n\t\t\t\t\t  | conditionalExp logicalOp \'(\' conditionalExp \')\'\n\tlogicalOp : OP_LAND\n\t\t\t\t | OP_LOR\n\t\t\t\t | OP_XOR\n\t condArgs : arithmeticExp\n\t\t\t\t | IDENTIFIER\n\t\t\t\t | LNUM_LITERAL\n\t\t\t\t | DNUM_LITERAL\n\tblock : states block\n\t\t\t |\n\treturn : RETURN ";"\n\t\t\t  | RETURN arithmeticExp ";"\n\tbreak : BREAK ";"\n\tcontinue : CONTINUE ";"\n\techo : ECHO ";"\n\t\t\t| ECHO arithmeticExp ";"\n\tprint : PRINT arithmeticExp ";"\n\t\t\t | PRINT \'(\' arithmeticExp \')\' \';\'\n\tend : CLOSETAG'
    
_lr_action_items = {'ASS_MUL':([15,],[48,]),'RETURN':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[3,-27,3,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,3,-40,3,-45,3,-46,]),'OP_LAND':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,78,79,81,82,83,84,85,90,109,111,113,118,123,124,128,130,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,94,-56,-14,-15,-10,-12,-11,94,94,94,-55,94,94,94,94,94,]),'-':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,75,76,77,81,82,83,84,85,],[63,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-2,-1,-3,-14,-15,-10,-12,-11,]),'OP_IDENTICAL':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,98,-14,-15,-10,-12,-11,]),'OP_INC':([2,3,4,5,8,14,15,16,17,18,19,20,21,25,34,39,44,45,46,47,48,49,50,53,54,55,57,58,59,60,62,63,64,65,66,67,68,71,72,74,76,87,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,110,112,116,117,119,122,126,127,131,],[6,6,-27,6,6,-28,51,-22,-24,-19,6,-25,-23,-26,51,-70,6,-73,-20,-33,-32,-34,6,-36,-35,-31,-74,-21,6,-72,6,6,-71,6,6,6,-76,6,-75,6,51,-39,6,-62,-61,-63,-52,-50,-49,-53,6,-51,-48,-47,-54,-77,6,6,6,-40,6,6,6,-45,6,-46,]),'OP_DEC':([2,3,4,5,8,14,15,16,17,18,19,20,21,25,34,39,44,45,46,47,48,49,50,53,54,55,57,58,59,60,62,63,64,65,66,67,68,71,72,74,76,87,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,110,112,116,117,119,122,126,127,131,],[7,7,-27,7,7,-28,52,-22,-24,-19,7,-25,-23,-26,52,-70,7,-73,-20,-33,-32,-34,7,-36,-35,-31,-74,-21,7,-72,7,7,-71,7,7,7,-76,7,-75,7,52,-39,7,-62,-61,-63,-52,-50,-49,-53,7,-51,-48,-47,-54,-77,7,7,7,-40,7,7,7,-45,7,-46,]),'PRINT':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[8,-27,8,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,8,-40,8,-45,8,-46,]),'OP_LE':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,102,-14,-15,-10,-12,-11,]),'ASS_DIV':([15,],[47,]),'OP_NE':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,96,-14,-15,-10,-12,-11,]),'%':([28,30,31,32,33,34,35,36,37,38,41,42,51,52,75,76,77,81,82,83,84,85,],[-4,66,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-2,-1,-3,66,66,-10,-12,-11,]),')':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,69,73,75,76,77,78,79,81,82,83,84,85,90,111,113,114,118,123,124,128,130,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,86,-64,-2,-1,-3,92,-56,-14,-15,-10,-12,-11,109,-57,-55,121,124,-59,-60,130,-58,]),'(':([8,23,26,59,74,91,93,94,95,110,117,122,],[44,59,61,74,74,110,-62,-61,-63,74,122,74,]),'+':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,75,76,77,81,82,83,84,85,],[62,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-2,-1,-3,-14,-15,-10,-12,-11,]),'*':([28,30,31,32,33,34,35,36,37,38,41,42,51,52,75,76,77,81,82,83,84,85,],[-4,65,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-2,-1,-3,65,65,-10,-12,-11,]),'CLOSETAG':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,116,126,131,],[10,-27,10,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,-40,-45,-46,]),'OP_LOR':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,78,79,81,82,83,84,85,90,109,111,113,118,123,124,128,130,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,93,-56,-14,-15,-10,-12,-11,93,93,93,-55,93,93,93,93,93,]),'/':([28,30,31,32,33,34,35,36,37,38,41,42,51,52,75,76,77,81,82,83,84,85,],[-4,67,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-2,-1,-3,67,67,-10,-12,-11,]),'LNUM_LITERAL':([3,8,19,44,47,48,49,50,53,54,55,59,62,63,65,66,67,71,74,91,93,94,95,96,97,98,99,100,101,102,103,104,107,110,117,122,],[36,36,36,36,-33,-32,-34,36,-36,-35,-31,75,36,36,36,36,36,36,75,75,-62,-61,-63,-52,-50,-49,-53,75,-51,-48,-47,-54,36,75,75,75,]),'BOOL_LITERAL':([3,8,19,44,47,48,49,50,53,54,55,59,62,63,65,66,67,71,74,91,93,94,95,96,97,98,99,100,101,102,103,104,107,110,117,122,],[38,38,38,38,-33,-32,-34,38,-36,-35,-31,38,38,38,38,38,38,38,38,38,-62,-61,-63,-52,-50,-49,-53,38,-51,-48,-47,-54,38,38,38,38,]),';':([3,11,13,19,22,24,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,51,52,56,70,81,82,83,84,85,86,108,],[39,45,46,57,58,60,-16,-4,64,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,68,-41,-42,72,87,-14,-15,-10,-12,-11,106,116,]),'IDENTIFIER':([2,3,4,5,6,7,8,14,16,17,18,19,20,21,25,39,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,71,72,74,87,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,112,116,117,119,122,126,127,131,],[15,34,-27,15,41,42,34,-28,-22,-24,-19,34,-25,-23,-26,-70,34,-73,-20,-33,-32,-34,34,-36,-35,-31,-74,-21,76,-72,80,34,34,-71,34,34,34,-76,34,-75,76,-39,76,-62,-61,-63,-52,-50,-49,-53,76,-51,-48,-47,-54,114,-77,34,76,15,-40,76,15,76,-45,15,-46,]),'=':([15,],[55,]),'<':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,99,-14,-15,-10,-12,-11,]),'OPENTAG':([0,],[2,]),'DOUBLE_STRING':([3,8,19,44,47,48,49,50,53,54,55,59,62,63,65,66,67,71,74,91,93,94,95,96,97,98,99,100,101,102,103,104,107,110,117,122,],[33,33,33,33,-33,-32,-34,33,-36,-35,-31,33,33,33,33,33,33,33,33,33,-62,-61,-63,-52,-50,-49,-53,33,-51,-48,-47,-54,33,33,33,33,]),'OP_NOTIDENTICAL':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,97,-14,-15,-10,-12,-11,]),'ASS_ADD':([15,],[54,]),'ASS_MOD':([15,],[49,]),'DNUM_LITERAL':([3,8,19,44,47,48,49,50,53,54,55,59,62,63,65,66,67,71,74,91,93,94,95,96,97,98,99,100,101,102,103,104,107,110,117,122,],[31,31,31,31,-33,-32,-34,31,-36,-35,-31,77,31,31,31,31,31,31,77,77,-62,-61,-63,-52,-50,-49,-53,77,-51,-48,-47,-54,31,77,77,77,]),'ECHO':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[19,-27,19,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,19,-40,19,-45,19,-46,]),'>':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,104,-14,-15,-10,-12,-11,]),'AS':([80,],[105,]),'FOREACH':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[26,-27,26,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,26,-40,26,-45,26,-46,]),'ASS_SUB':([15,],[53,]),'OP_XOR':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,78,79,81,82,83,84,85,90,109,111,113,118,123,124,128,130,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,95,-56,-14,-15,-10,-12,-11,95,95,95,-55,95,95,95,95,95,]),'[':([55,],[71,]),']':([28,31,33,34,35,36,37,38,41,42,51,52,88,89,115,],[-4,-3,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-37,108,-38,]),',':([28,31,33,34,35,36,37,38,41,42,51,52,88,],[-4,-3,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,107,]),'SINGLE_STRING':([3,8,19,44,47,48,49,50,53,54,55,59,62,63,65,66,67,71,74,91,93,94,95,96,97,98,99,100,101,102,103,104,107,110,117,122,],[28,28,28,28,-33,-32,-34,28,-36,-35,-31,28,28,28,28,28,28,28,28,28,-62,-61,-63,-52,-50,-49,-53,28,-51,-48,-47,-54,28,28,28,28,]),'OP_EQ':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,101,-14,-15,-10,-12,-11,]),'WHILE':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[23,-27,23,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,23,-40,23,-45,23,-46,]),'BREAK':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[24,-27,24,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,24,-40,24,-45,24,-46,]),'CONTINUE':([2,4,5,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,126,127,131,],[11,-27,11,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,11,-40,11,-45,11,-46,]),'{':([92,121,],[112,127,]),'$end':([1,9,10,12,40,],[0,-30,-78,-18,-29,]),'}':([4,14,16,17,18,20,21,25,39,45,46,57,58,60,64,68,72,87,106,112,116,119,120,125,126,127,129,131,],[-27,-28,-22,-24,-19,-25,-23,-26,-70,-73,-20,-74,-21,-72,-71,-76,-75,-39,-77,-69,-40,-69,126,-68,-45,-69,131,-46,]),'OP_GE':([27,28,30,31,32,33,34,35,36,37,38,41,42,51,52,73,75,76,77,79,81,82,83,84,85,],[-16,-4,-13,-3,-9,-5,-1,-8,-2,-7,-6,-43,-44,-41,-42,-64,-2,-1,-3,103,-14,-15,-10,-12,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'echo':([2,5,112,119,127,],[4,4,4,4,4,]),'states':([2,5,112,119,127,],[5,5,119,119,119,]),'end':([2,5,],[9,9,]),'MultiplicativeExpression':([3,8,19,44,50,59,62,63,74,91,100,110,117,122,],[30,30,30,30,30,30,81,82,30,30,30,30,30,30,]),'start':([0,],[1,]),'params':([71,107,],[89,115,]),'statement':([2,5,],[12,40,]),'postfixExpr':([2,3,5,8,19,44,50,59,62,63,65,66,67,71,74,91,100,107,110,112,117,119,122,127,],[13,37,13,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,13,37,13,37,13,]),'print':([2,5,112,119,127,],[14,14,14,14,14,]),'whileLoop':([2,5,112,119,127,],[16,16,16,16,16,]),'return':([2,5,112,119,127,],[17,17,17,17,17,]),'logicalOp':([78,90,109,111,118,123,124,128,130,],[91,91,117,91,91,91,117,91,117,]),'assignment':([2,5,112,119,127,],[18,18,18,18,18,]),'args':([3,8,19,44,50,59,62,63,65,66,67,71,74,91,100,107,110,117,122,],[32,32,32,32,32,32,32,32,83,84,85,88,32,32,32,88,32,32,32,]),'break':([2,5,112,119,127,],[20,20,20,20,20,]),'forEach':([2,5,112,119,127,],[21,21,21,21,21,]),'arithmeticExp':([3,8,19,44,50,59,74,91,100,110,117,122,],[29,43,56,69,70,73,73,73,73,73,73,73,]),'assignmentOperator':([15,],[50,]),'conditionalExp':([59,74,91,110,117,122,],[78,90,111,118,123,128,]),'AdditiveExpression':([3,8,19,44,50,59,74,91,100,110,117,122,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'conditionalOp':([79,],[100,]),'prefixExpr':([2,3,5,8,19,44,50,59,62,63,65,66,67,71,74,91,100,107,110,112,117,119,122,127,],[22,35,22,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,22,35,22,35,22,]),'continue':([2,5,112,119,127,],[25,25,25,25,25,]),'condArgs':([59,74,91,100,110,117,122,],[79,79,79,113,79,79,79,]),'block':([112,119,127,],[120,125,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('args -> IDENTIFIER','args',1,'p_args','php_yacc.py',60),
  ('args -> LNUM_LITERAL','args',1,'p_args','php_yacc.py',61),
  ('args -> DNUM_LITERAL','args',1,'p_args','php_yacc.py',62),
  ('args -> SINGLE_STRING','args',1,'p_args','php_yacc.py',63),
  ('args -> DOUBLE_STRING','args',1,'p_args','php_yacc.py',64),
  ('args -> BOOL_LITERAL','args',1,'p_args','php_yacc.py',65),
  ('args -> postfixExpr','args',1,'p_args','php_yacc.py',66),
  ('args -> prefixExpr','args',1,'p_args','php_yacc.py',67),
  ('MultiplicativeExpression -> args','MultiplicativeExpression',1,'p_MultiplicativeExpression','php_yacc.py',72),
  ('MultiplicativeExpression -> MultiplicativeExpression * args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',73),
  ('MultiplicativeExpression -> MultiplicativeExpression / args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',74),
  ('MultiplicativeExpression -> MultiplicativeExpression % args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',75),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','php_yacc.py',114),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','php_yacc.py',115),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','php_yacc.py',116),
  ('arithmeticExp -> AdditiveExpression','arithmeticExp',1,'p_arithmeticExp','php_yacc.py',153),
  ('arithmeticExp -> MultiplicativeExpression','arithmeticExp',1,'p_arithmeticExp','php_yacc.py',154),
  ('start -> OPENTAG statement','start',2,'p_start','php_yacc.py',161),
  ('states -> assignment','states',1,'p_states','php_yacc.py',166),
  ('states -> postfixExpr ;','states',2,'p_states','php_yacc.py',167),
  ('states -> prefixExpr ;','states',2,'p_states','php_yacc.py',168),
  ('states -> whileLoop','states',1,'p_states','php_yacc.py',169),
  ('states -> forEach','states',1,'p_states','php_yacc.py',170),
  ('states -> return','states',1,'p_states','php_yacc.py',171),
  ('states -> break','states',1,'p_states','php_yacc.py',172),
  ('states -> continue','states',1,'p_states','php_yacc.py',173),
  ('states -> echo','states',1,'p_states','php_yacc.py',174),
  ('states -> print','states',1,'p_states','php_yacc.py',175),
  ('statement -> states statement','statement',2,'p_statement','php_yacc.py',181),
  ('statement -> end','statement',1,'p_statement','php_yacc.py',182),
  ('assignmentOperator -> =','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',188),
  ('assignmentOperator -> ASS_MUL','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',189),
  ('assignmentOperator -> ASS_DIV','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',190),
  ('assignmentOperator -> ASS_MOD','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',191),
  ('assignmentOperator -> ASS_ADD','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',192),
  ('assignmentOperator -> ASS_SUB','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',193),
  ('params -> args','params',1,'p_params','php_yacc.py',198),
  ('params -> args , params','params',3,'p_params','php_yacc.py',199),
  ('assignment -> IDENTIFIER assignmentOperator arithmeticExp ;','assignment',4,'p_assignment','php_yacc.py',211),
  ('assignment -> IDENTIFIER = [ params ] ;','assignment',6,'p_assignment','php_yacc.py',212),
  ('postfixExpr -> IDENTIFIER OP_INC','postfixExpr',2,'p_postfixExprInc','php_yacc.py',261),
  ('postfixExpr -> IDENTIFIER OP_DEC','postfixExpr',2,'p_postfixExprDec','php_yacc.py',273),
  ('prefixExpr -> OP_INC IDENTIFIER','prefixExpr',2,'p_prefixExprInc','php_yacc.py',285),
  ('prefixExpr -> OP_DEC IDENTIFIER','prefixExpr',2,'p_prefixExprDec','php_yacc.py',297),
  ('whileLoop -> WHILE ( conditionalExp ) { block }','whileLoop',7,'p_whileLoop','php_yacc.py',309),
  ('forEach -> FOREACH ( IDENTIFIER AS IDENTIFIER ) { block }','forEach',9,'p_forEach','php_yacc.py',315),
  ('conditionalOp -> OP_GE','conditionalOp',1,'p_conditionalOp','php_yacc.py',320),
  ('conditionalOp -> OP_LE','conditionalOp',1,'p_conditionalOp','php_yacc.py',321),
  ('conditionalOp -> OP_IDENTICAL','conditionalOp',1,'p_conditionalOp','php_yacc.py',322),
  ('conditionalOp -> OP_NOTIDENTICAL','conditionalOp',1,'p_conditionalOp','php_yacc.py',323),
  ('conditionalOp -> OP_EQ','conditionalOp',1,'p_conditionalOp','php_yacc.py',324),
  ('conditionalOp -> OP_NE','conditionalOp',1,'p_conditionalOp','php_yacc.py',325),
  ('conditionalOp -> <','conditionalOp',1,'p_conditionalOp','php_yacc.py',326),
  ('conditionalOp -> >','conditionalOp',1,'p_conditionalOp','php_yacc.py',327),
  ('conditionalExp -> condArgs conditionalOp condArgs','conditionalExp',3,'p_conditionalExp','php_yacc.py',332),
  ('conditionalExp -> condArgs','conditionalExp',1,'p_conditionalExp','php_yacc.py',333),
  ('conditionalExp -> conditionalExp logicalOp conditionalExp','conditionalExp',3,'p_conditionalExp','php_yacc.py',334),
  ('conditionalExp -> ( conditionalExp ) logicalOp ( conditionalExp )','conditionalExp',7,'p_conditionalExp','php_yacc.py',335),
  ('conditionalExp -> ( conditionalExp ) logicalOp conditionalExp','conditionalExp',5,'p_conditionalExp','php_yacc.py',336),
  ('conditionalExp -> conditionalExp logicalOp ( conditionalExp )','conditionalExp',5,'p_conditionalExp','php_yacc.py',337),
  ('logicalOp -> OP_LAND','logicalOp',1,'p_logicalOp','php_yacc.py',382),
  ('logicalOp -> OP_LOR','logicalOp',1,'p_logicalOp','php_yacc.py',383),
  ('logicalOp -> OP_XOR','logicalOp',1,'p_logicalOp','php_yacc.py',384),
  ('condArgs -> arithmeticExp','condArgs',1,'p_condArgs','php_yacc.py',389),
  ('condArgs -> IDENTIFIER','condArgs',1,'p_condArgs','php_yacc.py',390),
  ('condArgs -> LNUM_LITERAL','condArgs',1,'p_condArgs','php_yacc.py',391),
  ('condArgs -> DNUM_LITERAL','condArgs',1,'p_condArgs','php_yacc.py',392),
  ('block -> states block','block',2,'p_block','php_yacc.py',397),
  ('block -> <empty>','block',0,'p_block','php_yacc.py',398),
  ('return -> RETURN ;','return',2,'p_return','php_yacc.py',403),
  ('return -> RETURN arithmeticExp ;','return',3,'p_return','php_yacc.py',404),
  ('break -> BREAK ;','break',2,'p_break','php_yacc.py',409),
  ('continue -> CONTINUE ;','continue',2,'p_continue','php_yacc.py',414),
  ('echo -> ECHO ;','echo',2,'p_echo','php_yacc.py',419),
  ('echo -> ECHO arithmeticExp ;','echo',3,'p_echo','php_yacc.py',420),
  ('print -> PRINT arithmeticExp ;','print',3,'p_print','php_yacc.py',425),
  ('print -> PRINT ( arithmeticExp ) ;','print',5,'p_print','php_yacc.py',426),
  ('end -> CLOSETAG','end',1,'p_end','php_yacc.py',431),
]
