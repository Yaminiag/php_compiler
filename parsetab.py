
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startARRAY AS ASS_ADD ASS_DIV ASS_MOD ASS_MUL ASS_SUB BOOL_LITERAL BREAK CLOSETAG CONTINUE DNUM_LITERAL DOUBLE_STRING ECHO ELSE ELSEIF FOREACH GLOBAL IDENTIFIER IF KEYWORDS LNUM_LITERAL NEW OPENTAG OP_DEC OP_EQ OP_GE OP_IDENTICAL OP_INC OP_LAND OP_LE OP_LOR OP_NE OP_NOTIDENTICAL OP_XOR PRINT REQUIRE RETURN SINGLE_STRING STATIC WHILEargs : IDENTIFIER\n\t\t\t| LNUM_LITERAL\n\t\t\t| DNUM_LITERAL\n\t\t\t| SINGLE_STRING\n\t\t\t| DOUBLE_STRING\n\t\t\t| BOOL_LITERAL\n\t\t\t| postfixExpr\n\t\t\t| prefixExpr\n\t muloperator : \'*\'\n\t\t\t\t | \'/\'\n\t\t\t\t | \'%\'\n\t addoperator : \'+\'\n\t\t\t\t | \'-\'\n\tMultiplicativeExpression : args\n    | MultiplicativeExpression muloperator args\n    AdditiveExpression : MultiplicativeExpression\n        | AdditiveExpression addoperator MultiplicativeExpression\n     arithmeticExp : AdditiveExpression\n\t\t\t\t\t\t| MultiplicativeExpression\n\tstart : OPENTAG statementstates : assignment\n\t\t\t  | postfixExpr ";"\n\t\t\t  | prefixExpr ";"\n\t\t\t  | whileLoop\n\t\t\t  | return\n\t\t\t  | break\n\t\t\t  | continue\n\t\t\t  | echo \n\t\t\t  | print\n\n\tstatement : states statement\n\t\t\t\t   | end\n\tassignmentOperator : \'=\'\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    assignment : IDENTIFIER assignmentOperator arithmeticExp ";" \n\t\t\t\t  \n\tpostfixExpr : IDENTIFIER OP_INC\n\tpostfixExpr : IDENTIFIER OP_DEC \n\tprefixExpr : OP_INC IDENTIFIER\n\tprefixExpr : OP_DEC IDENTIFIER \n\twhileLoop : WHILE \'(\' conditionalExp \')\' \'{\' block \'}\'\n\tconditionalOp : OP_GE\n\t\t\t\t\t | OP_LE\n\t\t\t\t\t | OP_IDENTICAL\n\t\t\t\t\t | OP_NOTIDENTICAL\n\t\t\t\t\t | OP_EQ\n\t\t\t\t\t | OP_NE\n\t\t\t\t\t | \'<\'\n\t\t\t\t\t | \'>\'\n\tconditionalExp : condArgs conditionalOp condArgs\n\t\t\t\t\t  | condArgs\n\t\t\t\t\t  | conditionalExp logicalOp conditionalExp\n\t\t\t\t\t  | \'(\' conditionalExp \')\' logicalOp \'(\' conditionalExp \')\'\n\t\t\t\t\t  | \'(\' conditionalExp \')\' logicalOp conditionalExp\n\t\t\t\t\t  | conditionalExp logicalOp \'(\' conditionalExp \')\'\n\tlogicalOp : OP_LAND\n\t\t\t\t | OP_LOR\n\t\t\t\t | OP_XOR\n\t condArgs : arithmeticExp\n\t\t\t\t | IDENTIFIER\n\t\t\t\t | LNUM_LITERAL\n\t\t\t\t | DNUM_LITERAL\n\tblock : states block\n\t\t\t |\n\treturn : RETURN ";"\n\t\t\t  | RETURN arithmeticExp ";"\n\tbreak : BREAK ";"\n\tcontinue : CONTINUE ";"\n\techo : ECHO ";"\n\t\t\t| ECHO arithmeticExp ";"\n\tprint : PRINT arithmeticExp ";"\n\t\t\t | PRINT \'(\' arithmeticExp \')\' \';\'\n\tend : CLOSETAG'
    
_lr_action_items = {'OP_LOR':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,72,73,74,75,80,81,82,98,100,102,104,108,109,112,113,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,85,-2,-53,-1,-17,-15,85,85,85,-52,85,85,85,85,85,]),'DNUM_LITERAL':([17,21,24,30,31,32,34,35,37,38,40,53,61,62,63,65,66,67,68,69,83,84,85,86,88,89,90,91,92,93,94,95,96,99,103,107,],[44,44,44,-36,-33,-32,-34,44,-35,-37,44,70,-12,44,-13,44,-9,-10,-11,70,70,-60,-59,-58,-49,-50,-51,70,-44,-46,-47,-45,-48,70,70,70,]),'OP_NE':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,88,-1,-17,-15,]),'-':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,73,75,80,81,],[-42,-40,-39,63,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-2,-1,-17,-15,]),'OP_NOTIDENTICAL':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,94,-1,-17,-15,]),'OPENTAG':([0,],[2,]),'BOOL_LITERAL':([17,21,24,30,31,32,34,35,37,38,40,53,61,62,63,65,66,67,68,69,83,84,85,86,88,89,90,91,92,93,94,95,96,99,103,107,],[51,51,51,-36,-33,-32,-34,51,-35,-37,51,51,-12,51,-13,51,-9,-10,-11,51,51,-60,-59,-58,-49,-50,-51,51,-44,-46,-47,-45,-48,51,51,51,]),'/':([25,33,36,42,43,44,45,47,48,49,50,51,52,54,70,73,75,80,81,],[-42,-40,-39,-7,-8,-3,-4,-14,67,-2,-5,-6,-1,-41,-3,-2,-1,67,-15,]),'RETURN':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,111,],[24,-25,24,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,24,24,-43,]),'ASS_ADD':([11,],[30,]),'PRINT':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,111,],[17,-25,17,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,17,17,-43,]),'>':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,90,-1,-17,-15,]),'+':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,73,75,80,81,],[-42,-40,-39,61,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-2,-1,-17,-15,]),'=':([11,],[32,]),'WHILE':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,111,],[18,-25,18,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,18,18,-43,]),'OP_DEC':([2,6,7,10,11,12,14,15,16,17,20,21,24,26,27,29,30,31,32,34,35,37,38,39,40,52,53,56,58,61,62,63,64,65,66,67,68,69,75,76,77,78,83,84,85,86,88,89,90,91,92,93,94,95,96,97,99,101,103,105,107,111,],[3,-25,3,-24,33,-26,-21,-28,-29,3,-27,3,3,-23,-70,-22,-36,-33,-32,-34,3,-35,-37,-69,3,33,3,-71,-67,-12,3,-13,-73,3,-9,-10,-11,3,33,-72,-68,-38,3,-60,-59,-58,-49,-50,-51,3,-44,-46,-47,-45,-48,-74,3,3,3,3,3,-43,]),'OP_GE':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,92,-1,-17,-15,]),'LNUM_LITERAL':([17,21,24,30,31,32,34,35,37,38,40,53,61,62,63,65,66,67,68,69,83,84,85,86,88,89,90,91,92,93,94,95,96,99,103,107,],[49,49,49,-36,-33,-32,-34,49,-35,-37,49,73,-12,49,-13,49,-9,-10,-11,73,73,-60,-59,-58,-49,-50,-51,73,-44,-46,-47,-45,-48,73,73,73,]),'ECHO':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,111,],[21,-25,21,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,21,21,-43,]),'(':([17,18,53,69,83,84,85,86,99,103,107,],[40,53,69,69,99,-60,-59,-58,69,107,69,]),'BREAK':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,111,],[13,-25,13,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,13,13,-43,]),'CONTINUE':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,111,],[5,-25,5,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,5,5,-43,]),')':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,60,70,71,72,73,74,75,80,81,82,100,102,104,108,109,112,113,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,79,-3,-61,87,-2,-53,-1,-17,-15,98,-54,-52,109,-56,-57,113,-55,]),'IDENTIFIER':([2,3,6,7,10,12,14,15,16,17,19,20,21,24,26,27,29,30,31,32,34,35,37,38,39,40,53,56,58,61,62,63,64,65,66,67,68,69,76,77,78,83,84,85,86,88,89,90,91,92,93,94,95,96,97,99,101,103,105,107,111,],[11,25,-25,11,-24,-26,-21,-28,-29,52,54,-27,52,52,-23,-70,-22,-36,-33,-32,-34,52,-35,-37,-69,52,75,-71,-67,-12,52,-13,-73,52,-9,-10,-11,75,-72,-68,-38,75,-60,-59,-58,-49,-50,-51,75,-44,-46,-47,-45,-48,-74,75,11,75,11,75,-43,]),'ASS_MUL':([11,],[31,]),'OP_LE':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,95,-1,-17,-15,]),'OP_EQ':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,96,-1,-17,-15,]),'OP_IDENTICAL':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,93,-1,-17,-15,]),'ASS_MOD':([11,],[37,]),'{':([87,],[101,]),'DOUBLE_STRING':([17,21,24,30,31,32,34,35,37,38,40,53,61,62,63,65,66,67,68,69,83,84,85,86,88,89,90,91,92,93,94,95,96,99,103,107,],[50,50,50,-36,-33,-32,-34,50,-35,-37,50,50,-12,50,-13,50,-9,-10,-11,50,50,-60,-59,-58,-49,-50,-51,50,-44,-46,-47,-45,-48,50,50,50,]),'}':([6,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,101,105,106,110,111,],[-25,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,-66,-66,111,-65,-43,]),'SINGLE_STRING':([17,21,24,30,31,32,34,35,37,38,40,53,61,62,63,65,66,67,68,69,83,84,85,86,88,89,90,91,92,93,94,95,96,99,103,107,],[45,45,45,-36,-33,-32,-34,45,-35,-37,45,45,-12,45,-13,45,-9,-10,-11,45,45,-60,-59,-58,-49,-50,-51,45,-44,-46,-47,-45,-48,45,45,45,]),'OP_XOR':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,72,73,74,75,80,81,82,98,100,102,104,108,109,112,113,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,84,-2,-53,-1,-17,-15,84,84,84,-52,84,84,84,84,84,]),'<':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,73,74,75,80,81,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,-2,89,-1,-17,-15,]),'OP_INC':([2,6,7,10,11,12,14,15,16,17,20,21,24,26,27,29,30,31,32,34,35,37,38,39,40,52,53,56,58,61,62,63,64,65,66,67,68,69,75,76,77,78,83,84,85,86,88,89,90,91,92,93,94,95,96,97,99,101,103,105,107,111,],[19,-25,19,-24,36,-26,-21,-28,-29,19,-27,19,19,-23,-70,-22,-36,-33,-32,-34,19,-35,-37,-69,19,36,19,-71,-67,-12,19,-13,-73,19,-9,-10,-11,19,36,-72,-68,-38,19,-60,-59,-58,-49,-50,-51,19,-44,-46,-47,-45,-48,-74,19,19,19,19,19,-43,]),'ASS_DIV':([11,],[34,]),'OP_LAND':([25,33,36,41,42,43,44,45,47,48,49,50,51,52,54,70,71,72,73,74,75,80,81,82,98,100,102,104,108,109,112,113,],[-42,-40,-39,-18,-7,-8,-3,-4,-14,-16,-2,-5,-6,-1,-41,-3,-61,86,-2,-53,-1,-17,-15,86,86,86,-52,86,86,86,86,86,]),';':([4,5,8,13,21,24,25,33,36,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,79,80,81,],[26,27,29,39,56,58,-42,-40,-39,-18,-7,-8,-3,-4,64,-14,-16,-2,-5,-6,-1,-41,76,77,78,97,-17,-15,]),'*':([25,33,36,42,43,44,45,47,48,49,50,51,52,54,70,73,75,80,81,],[-42,-40,-39,-7,-8,-3,-4,-14,66,-2,-5,-6,-1,-41,-3,-2,-1,66,-15,]),'$end':([1,9,22,23,28,],[0,-20,-31,-75,-30,]),'ASS_SUB':([11,],[38,]),'CLOSETAG':([2,6,7,10,12,14,15,16,20,26,27,29,39,56,58,64,76,77,78,97,111,],[23,-25,23,-24,-26,-21,-28,-29,-27,-23,-70,-22,-69,-71,-67,-73,-72,-68,-38,-74,-43,]),'%':([25,33,36,42,43,44,45,47,48,49,50,51,52,54,70,73,75,80,81,],[-42,-40,-39,-7,-8,-3,-4,-14,68,-2,-5,-6,-1,-41,-3,-2,-1,68,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'logicalOp':([72,82,98,100,104,108,109,112,113,],[83,83,103,83,83,83,103,83,103,]),'AdditiveExpression':([17,21,24,35,40,53,69,83,91,99,103,107,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'print':([2,7,101,105,],[16,16,16,16,]),'prefixExpr':([2,7,17,21,24,35,40,53,62,65,69,83,91,99,101,103,105,107,],[4,4,43,43,43,43,43,43,43,43,43,43,43,43,4,43,4,43,]),'arithmeticExp':([17,21,24,35,40,53,69,83,91,99,103,107,],[46,55,57,59,60,71,71,71,71,71,71,71,]),'return':([2,7,101,105,],[6,6,6,6,]),'states':([2,7,101,105,],[7,7,105,105,]),'MultiplicativeExpression':([17,21,24,35,40,53,62,69,83,91,99,103,107,],[48,48,48,48,48,48,80,48,48,48,48,48,48,]),'postfixExpr':([2,7,17,21,24,35,40,53,62,65,69,83,91,99,101,103,105,107,],[8,8,42,42,42,42,42,42,42,42,42,42,42,42,8,42,8,42,]),'statement':([2,7,],[9,28,]),'whileLoop':([2,7,101,105,],[10,10,10,10,]),'conditionalExp':([53,69,83,99,103,107,],[72,82,100,104,108,112,]),'start':([0,],[1,]),'muloperator':([48,80,],[65,65,]),'break':([2,7,101,105,],[12,12,12,12,]),'args':([17,21,24,35,40,53,62,65,69,83,91,99,103,107,],[47,47,47,47,47,47,47,81,47,47,47,47,47,47,]),'block':([101,105,],[106,110,]),'assignment':([2,7,101,105,],[14,14,14,14,]),'echo':([2,7,101,105,],[15,15,15,15,]),'condArgs':([53,69,83,91,99,103,107,],[74,74,74,102,74,74,74,]),'addoperator':([41,],[62,]),'continue':([2,7,101,105,],[20,20,20,20,]),'conditionalOp':([74,],[91,]),'assignmentOperator':([11,],[35,]),'end':([2,7,],[22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('args -> IDENTIFIER','args',1,'p_args','php_yacc.py',40),
  ('args -> LNUM_LITERAL','args',1,'p_args','php_yacc.py',41),
  ('args -> DNUM_LITERAL','args',1,'p_args','php_yacc.py',42),
  ('args -> SINGLE_STRING','args',1,'p_args','php_yacc.py',43),
  ('args -> DOUBLE_STRING','args',1,'p_args','php_yacc.py',44),
  ('args -> BOOL_LITERAL','args',1,'p_args','php_yacc.py',45),
  ('args -> postfixExpr','args',1,'p_args','php_yacc.py',46),
  ('args -> prefixExpr','args',1,'p_args','php_yacc.py',47),
  ('muloperator -> *','muloperator',1,'p_muloperator','php_yacc.py',52),
  ('muloperator -> /','muloperator',1,'p_muloperator','php_yacc.py',53),
  ('muloperator -> %','muloperator',1,'p_muloperator','php_yacc.py',54),
  ('addoperator -> +','addoperator',1,'p_addoperator','php_yacc.py',58),
  ('addoperator -> -','addoperator',1,'p_addoperator','php_yacc.py',59),
  ('MultiplicativeExpression -> args','MultiplicativeExpression',1,'p_MultiplicativeExpression','php_yacc.py',63),
  ('MultiplicativeExpression -> MultiplicativeExpression muloperator args','MultiplicativeExpression',3,'p_MultiplicativeExpression','php_yacc.py',64),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','php_yacc.py',92),
  ('AdditiveExpression -> AdditiveExpression addoperator MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','php_yacc.py',93),
  ('arithmeticExp -> AdditiveExpression','arithmeticExp',1,'p_arithmeticExp','php_yacc.py',118),
  ('arithmeticExp -> MultiplicativeExpression','arithmeticExp',1,'p_arithmeticExp','php_yacc.py',119),
  ('start -> OPENTAG statement','start',2,'p_start','php_yacc.py',125),
  ('states -> assignment','states',1,'p_states','php_yacc.py',128),
  ('states -> postfixExpr ;','states',2,'p_states','php_yacc.py',129),
  ('states -> prefixExpr ;','states',2,'p_states','php_yacc.py',130),
  ('states -> whileLoop','states',1,'p_states','php_yacc.py',131),
  ('states -> return','states',1,'p_states','php_yacc.py',132),
  ('states -> break','states',1,'p_states','php_yacc.py',133),
  ('states -> continue','states',1,'p_states','php_yacc.py',134),
  ('states -> echo','states',1,'p_states','php_yacc.py',135),
  ('states -> print','states',1,'p_states','php_yacc.py',136),
  ('statement -> states statement','statement',2,'p_statement','php_yacc.py',141),
  ('statement -> end','statement',1,'p_statement','php_yacc.py',142),
  ('assignmentOperator -> =','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',147),
  ('assignmentOperator -> ASS_MUL','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',148),
  ('assignmentOperator -> ASS_DIV','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',149),
  ('assignmentOperator -> ASS_MOD','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',150),
  ('assignmentOperator -> ASS_ADD','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',151),
  ('assignmentOperator -> ASS_SUB','assignmentOperator',1,'p_assignmentOperator','php_yacc.py',152),
  ('assignment -> IDENTIFIER assignmentOperator arithmeticExp ;','assignment',4,'p_assignment','php_yacc.py',157),
  ('postfixExpr -> IDENTIFIER OP_INC','postfixExpr',2,'p_postfixExprInc','php_yacc.py',187),
  ('postfixExpr -> IDENTIFIER OP_DEC','postfixExpr',2,'p_postfixExprDec','php_yacc.py',199),
  ('prefixExpr -> OP_INC IDENTIFIER','prefixExpr',2,'p_prefixExprInc','php_yacc.py',211),
  ('prefixExpr -> OP_DEC IDENTIFIER','prefixExpr',2,'p_prefixExprDec','php_yacc.py',223),
  ('whileLoop -> WHILE ( conditionalExp ) { block }','whileLoop',7,'p_whileLoop','php_yacc.py',235),
  ('conditionalOp -> OP_GE','conditionalOp',1,'p_conditionalOp','php_yacc.py',238),
  ('conditionalOp -> OP_LE','conditionalOp',1,'p_conditionalOp','php_yacc.py',239),
  ('conditionalOp -> OP_IDENTICAL','conditionalOp',1,'p_conditionalOp','php_yacc.py',240),
  ('conditionalOp -> OP_NOTIDENTICAL','conditionalOp',1,'p_conditionalOp','php_yacc.py',241),
  ('conditionalOp -> OP_EQ','conditionalOp',1,'p_conditionalOp','php_yacc.py',242),
  ('conditionalOp -> OP_NE','conditionalOp',1,'p_conditionalOp','php_yacc.py',243),
  ('conditionalOp -> <','conditionalOp',1,'p_conditionalOp','php_yacc.py',244),
  ('conditionalOp -> >','conditionalOp',1,'p_conditionalOp','php_yacc.py',245),
  ('conditionalExp -> condArgs conditionalOp condArgs','conditionalExp',3,'p_conditionalExp','php_yacc.py',249),
  ('conditionalExp -> condArgs','conditionalExp',1,'p_conditionalExp','php_yacc.py',250),
  ('conditionalExp -> conditionalExp logicalOp conditionalExp','conditionalExp',3,'p_conditionalExp','php_yacc.py',251),
  ('conditionalExp -> ( conditionalExp ) logicalOp ( conditionalExp )','conditionalExp',7,'p_conditionalExp','php_yacc.py',252),
  ('conditionalExp -> ( conditionalExp ) logicalOp conditionalExp','conditionalExp',5,'p_conditionalExp','php_yacc.py',253),
  ('conditionalExp -> conditionalExp logicalOp ( conditionalExp )','conditionalExp',5,'p_conditionalExp','php_yacc.py',254),
  ('logicalOp -> OP_LAND','logicalOp',1,'p_logicalOp','php_yacc.py',258),
  ('logicalOp -> OP_LOR','logicalOp',1,'p_logicalOp','php_yacc.py',259),
  ('logicalOp -> OP_XOR','logicalOp',1,'p_logicalOp','php_yacc.py',260),
  ('condArgs -> arithmeticExp','condArgs',1,'p_condArgs','php_yacc.py',264),
  ('condArgs -> IDENTIFIER','condArgs',1,'p_condArgs','php_yacc.py',265),
  ('condArgs -> LNUM_LITERAL','condArgs',1,'p_condArgs','php_yacc.py',266),
  ('condArgs -> DNUM_LITERAL','condArgs',1,'p_condArgs','php_yacc.py',267),
  ('block -> states block','block',2,'p_block','php_yacc.py',271),
  ('block -> <empty>','block',0,'p_block','php_yacc.py',272),
  ('return -> RETURN ;','return',2,'p_return','php_yacc.py',276),
  ('return -> RETURN arithmeticExp ;','return',3,'p_return','php_yacc.py',277),
  ('break -> BREAK ;','break',2,'p_break','php_yacc.py',282),
  ('continue -> CONTINUE ;','continue',2,'p_continue','php_yacc.py',286),
  ('echo -> ECHO ;','echo',2,'p_echo','php_yacc.py',290),
  ('echo -> ECHO arithmeticExp ;','echo',3,'p_echo','php_yacc.py',291),
  ('print -> PRINT arithmeticExp ;','print',3,'p_print','php_yacc.py',295),
  ('print -> PRINT ( arithmeticExp ) ;','print',5,'p_print','php_yacc.py',296),
  ('end -> CLOSETAG','end',1,'p_end','php_yacc.py',300),
]
